// <auto-generated />
using System;
using GameTracker.Forser.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameTracker.Forser.Migrations
{
    [DbContext(typeof(GTContext))]
    [Migration("20231013145749_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameTracker.Forser.Models.GameInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GameDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GameInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameDescription = "Grand Theft Auto V for PC offers players the option to explore the award-winning world of Los Santos and Blaine County in resolutions of up to 4k and beyond, as well as the chance to experience the game running at 60 frames per second.",
                            GameTitle = "Grand Theft Auto V"
                        },
                        new
                        {
                            Id = 2,
                            GameDescription = "Cyberpunk 2077 is an open-world, action-adventure RPG set in the dark future of Night City — a dangerous megalopolis obsessed with power, glamor, and ceaseless body modification.",
                            GameTitle = "CyberPunk 2077"
                        },
                        new
                        {
                            Id = 3,
                            GameDescription = "Honkai: Star Rail is a new HoYoverse space fantasy RPG. Hop aboard the Astral Express and experience the galaxy's infinite wonders on this journey filled with adventure and thrills.",
                            GameTitle = "Honkai: Star Rail"
                        });
                });

            modelBuilder.Entity("GameTracker.Forser.Models.GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SessionEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SessionStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 3,
                            SessionEnd = new DateTime(2023, 10, 13, 18, 57, 49, 656, DateTimeKind.Local).AddTicks(696),
                            SessionStart = new DateTime(2023, 10, 13, 16, 57, 49, 656, DateTimeKind.Local).AddTicks(597)
                        },
                        new
                        {
                            Id = 2,
                            GameId = 2,
                            SessionEnd = new DateTime(2023, 10, 13, 17, 57, 49, 656, DateTimeKind.Local).AddTicks(704),
                            SessionStart = new DateTime(2023, 10, 12, 16, 57, 49, 656, DateTimeKind.Local).AddTicks(702)
                        },
                        new
                        {
                            Id = 3,
                            GameId = 1,
                            SessionEnd = new DateTime(2023, 10, 14, 0, 57, 49, 656, DateTimeKind.Local).AddTicks(707),
                            SessionStart = new DateTime(2023, 10, 13, 20, 57, 49, 656, DateTimeKind.Local).AddTicks(706)
                        });
                });

            modelBuilder.Entity("GameTracker.Forser.Models.GameSession", b =>
                {
                    b.HasOne("GameTracker.Forser.Models.GameInfo", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
